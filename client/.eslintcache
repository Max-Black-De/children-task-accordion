[{"/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/index.js":"1","/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/App.js":"2","/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/admin/create-task.js":"3","/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/user/get-task.js":"4","/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/admin/TodoItem.jsx":"5","/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/user/TodoItem.jsx":"6","/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/start_pages/start-page.js":"7","/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/start_pages/header-admin.js":"8","/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/start_pages/header-user.js":"9"},{"size":243,"mtime":1610314458263,"results":"10","hashOfConfig":"11"},{"size":620,"mtime":1610317128360,"results":"12","hashOfConfig":"11"},{"size":14870,"mtime":1610458388348,"results":"13","hashOfConfig":"11"},{"size":9588,"mtime":1610395062735,"results":"14","hashOfConfig":"11"},{"size":307,"mtime":1610458547166,"results":"15","hashOfConfig":"11"},{"size":295,"mtime":1610458139991,"results":"16","hashOfConfig":"11"},{"size":1662,"mtime":1610480619371,"results":"17","hashOfConfig":"11"},{"size":659,"mtime":1610479528136,"results":"18","hashOfConfig":"11"},{"size":654,"mtime":1610479528137,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"b0q699",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/index.js",[],["43","44"],"/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/App.js",["45"],"import React, {Component}from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport CreateTask from './components/admin/create-task';\nimport \"./App.css\";\nimport GetTask from './components/user/get-task';\nimport Main from './components/start_pages/start-page';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"main\">\n                <Route exact path='/' component={Main} />\n                <Route path='/create-task' component={CreateTask} />\n                <Route path='/get-task'component={GetTask} />\n            </div>\n    );\n    }\n}\n\nexport default App;","/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/admin/create-task.js",["46","47","48"],"import React, { useState, useEffect } from 'react';\nimport TodoItem from \"./TodoItem\";\nimport Axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport \"./create-task.css\";\nimport HeadMin from '../start_pages/header-admin';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n  },\n  heading: {\n    // fontSize: theme.typography.pxToRem(15),\n    // fontWeight: theme.typography.fontWeightRegular,\n  },\n  // typografy: {\n  //   display: 'inline',\n  //   justifycontent: 'space-between',\n  // },\n\n\n  stylesForButn: {\n    borderRadius: 25,\n    width: '45px',\n    height: '25px',\n    margin: '10px 0 0 10px',\n    padding: '0px',\n    backgroundColor: '#c5e7dd',\n    color: '#7ab6a2',\n    fontSize: '0.9rem',\n  },\n    DeleteButn: {\n      borderRadius: 25,\n      border: '0.5px solid #eaccd7',\n      width: '45px',\n      height: '25px',\n      margin: '10px 0 0 10px',\n      padding: '0px',\n      color: '#8b3a4d',\n      fontSize: '0.9rem',\n  },\n  \n  dayBlockMon: {\n    // top: '-1px',\n    left: 'none',\n    // right: 0,\n    cursor: 'pointer',\n    minHeight: '60px',\n    borderRadius: '40px',\n    marginBottom: '10px',\n    backgroundColor: '#eaccd7',\n    fonSize: 'large'\n  },\n\n  dayBlockTue: {\n    cursor: 'pointer',\n    minHeight: '65px',\n    borderRadius: '40px',\n    marginBottom: '10px',\n    backgroundColor: '#dbdbf2'\n  },\n\n  dayBlockWed: {\n    cursor: 'pointer',\n    minHeight: '65px',\n    borderRadius: '40px',\n    marginBottom: '10px',\n    backgroundColor: ' #c5e7dd'\n  },\n\n  dayBlockThusd: {\n    cursor: 'pointer',\n    minHeight: '65px',\n    borderRadius: '40px',\n    marginBottom: '10px',\n    backgroundColor: '#f4f1dc'\n  },\n\n  dayBlockFri: {\n    cursor: 'pointer',\n    minHeight: '65px',\n    borderRadius: '40px',\n    marginBottom: '10px',\n    backgroundColor: '#f0dbec'\n  },\n\n  dayBlockSat: {\n    cursor: 'pointer',\n    minHeight: '65px',\n    borderRadius: '40px',\n    marginBottom: '10px',\n    backgroundColor: '#dddbf2'\n  },\n\n  dayBlockSun: {\n    cursor: 'pointer',\n    minHeight: '65px',\n    borderRadius: '40px',\n    marginBottom: '10px',\n    backgroundColor: '#9489ef'\n  }\n\n}));\n\nexport default function CreateTask() {\n  const classes = useStyles();\n  const [taskLst, setTaskList] = useState([])\n\n  // useEffect(() => {\n  //   Axios.get(\"http://localhost:3001/api/getmonday\")\n  //   .then((response) => {\n  //     setTaskList(response.data);\n  //   })\n  // }, []);\n\n  \n\n// MONDAY\n  const [inputMon, setInputMon] = useState(\"\");\n  const [itemsMon, setItemsMon] = useState([]);\n\n  const deleteTasksMon = () => {\n    Axios.delete('http://localhost:3001/api/deletemonday')\n    console.log('push')\n  };\n\n  const submitTasksMon = () => {\n    Axios.post('http://localhost:3001/api/insertmonday',{\n      tasksOfDay: inputMon\n    }).then(() => {\n      alert('successful insert')\n    });\n  };\n  function addItemMon() {\n    setItemsMon(prevData => {\n        return [...prevData, inputMon];\n    });\n    setInputMon(\"\");\n    submitTasksMon();\n    };\n  function removeItemMon(id) {\n    setItemsMon(prevData => {\n        return prevData.filter((item, index) => {\n            return index !== id;\n        })\n    });\n};\n\n// TUESDAY\n  const [inputTues, setInputTues] = useState(\"\");\n  const [itemsTues, setItemsTues] = useState([]);\n\n  const deleteTasksTues = () => {\n    Axios.delete('http://localhost:3001/api/deletetuesday')\n  }\n  const submitTasksTues = () => {\n  Axios.post('http://localhost:3001/api/inserttuesday',{\n    tasksOfDay: inputTues\n  }).then(() => {\n    alert('successful insert')\n  })\n};\nfunction addItemTues(event) {\n  setItemsTues(prevData => {\n      return [...prevData, inputTues];\n  });\n  setInputTues(\"\");\n  submitTasksTues();\n  };\nfunction removeItemTues(id) {\n  setItemsTues(prevData => {\n      return prevData.filter((item, index) => {\n          return index !== id;\n      })\n  });\n};\n\n// WEDNESDAY\n  const [inputWed, setInputWed] = useState(\"\");\n  const [itemsWed, setItemsWed] = useState([]);\n  const deleteTasksWed = () => {\n    Axios.delete('http://localhost:3001/api/deletewednesday')\n  }\n  const submitTasksWed = () => {\n    Axios.post('http://localhost:3001/api/insertwednesday',{\n      tasksOfDay: inputWed\n    }).then(() => {\n      alert('successful insert')\n    })\n  };\nfunction addItemWed(event) {\n  setItemsWed(prevData => {\n      return [...prevData, inputWed];\n  });\n  setInputWed(\"\");\n  submitTasksWed();\n  };\nfunction removeItemWed(id) {\n  setItemsWed(prevData => {\n      return prevData.filter((item, index) => {\n          return index !== id;\n      })\n  });\n;}\n\n// THUSDAY\n  const [inputThusd, setInputThusd] = useState(\"\");\n  const [itemsThusd, setItemsThusd] = useState([]);\n  const deleteTasksThusd = () => {\n    Axios.delete('http://localhost:3001/api/deletethusday')\n  }\n  const submitTasksThusd = () => {\n    Axios.post('http://localhost:3001/api/insertthusday',{\n      tasksOfDay: inputThusd\n    }).then(() => {\n      alert('successful insert')\n    })\n};\nfunction addItemThusd(event) {\n  setItemsThusd(prevData => {\n      return [...prevData, inputThusd];\n  });\n  setInputThusd(\"\");\n  submitTasksThusd();\n  };\nfunction removeItemThusd(id) {\n  setItemsThusd(prevData => {\n      return prevData.filter((item, index) => {\n          return index !== id;\n      })\n  });\n};\n\n// FRIDAY\nconst [inputFri, setInputFri] = useState(\"\");\n  const [itemsFri, setItemsFri] = useState([]);\n  const deleteTasksFri = () => {\n    Axios.delete('http://localhost:3001/api/deletefriday')\n  }\nconst submitTasksFri = () => {\n  Axios.post('http://localhost:3001/api/insertfriday',{\n    tasksOfDay: inputFri\n  }).then(() => {\n    alert('successful insert')\n  })\n};\nfunction addItemFri(event) {\n  setItemsFri(prevData => {\n      return [...prevData, inputFri];\n  });\n  setInputFri(\"\");\n  submitTasksFri();\n  };\nfunction removeItemFri(id) {\n  setItemsFri(prevData => {\n      return prevData.filter((item, index) => {\n          return index !== id;\n      })\n  });\n};\n\n// SATURDAY\n  const [inputSat, setInputSat] = useState(\"\");\n  const [itemsSat, setItemsSat] = useState([]);\n  const deleteTasksSat = () => {\n    Axios.delete('http://localhost:3001/api/deletesaturday')\n  }\n  const submitTasksSat = () => {\n  Axios.post('http://localhost:3001/api/insertsaturday',{\n    tasksOfDay: inputSat\n  }).then(() => {\n    alert('successful insert')\n  })\n};\nfunction addItemSat(event) {\n  setItemsSat(prevData => {\n      return [...prevData, inputSat];\n  });\n  setInputSat(\"\");\n  submitTasksSat();\n  };\nfunction removeItemSat(id) {\n  setItemsSat(prevData => {\n      return prevData.filter((item, index) => {\n          return index !== id;\n      })\n  });\n};\n\n// SUNDAY\n  const [inputSun, setInputSun] = useState(\"\");\n  const [itemsSun, setItemsSun] = useState([]);\n  const deleteTasksSun = () => {\n    Axios.delete('http://localhost:3001/api/deletesunday')\n  }\n  const submitTasksSun = () => {\n  Axios.post('http://localhost:3001/api/insertsunday',{\n    tasksOfDay: inputSun\n  }).then(() => {\n    alert('successful insert')\n  })\n};\nfunction addItemSun(event) {\n  setItemsSun(prevData => {\n      return [...prevData, inputSun];\n  });\n  setInputSun(\" \");\n  submitTasksSun();\n  };\nfunction removeItemSun(id) {\n  setItemsSun(prevData => {\n      return prevData.filter((item, index) => {\n          return index !== id;\n      })\n  });\n};\n  return (\n    <div className=\"main\">\n      <HeadMin />\n    <div className=\"background\">\n      <h1 className=\"hello\">Hello</h1>\n      <Accordion className={classes.dayBlockMon}>\n        <AccordionSummary\n        ><p>Monday</p>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography className={classes.typografy}>\n            <div className=\"btns\">\n              <Button className={classes.stylesForButn}\n              onClick={addItemMon}>\n              Add\n              </Button>\n              <Button className={classes.DeleteButn}\n              onClick={deleteTasksMon}>\n              Delete\n              </Button>\n            </div>\n            <TextField id=\"standart-basic\" label='Add to do' value={inputMon}\n            onChange={(event) => {setInputMon(event.target.value)}}\n            ></TextField>\n            <List>\n              {itemsMon.map((item, index) => (\n              <TodoItem\n              key={index}\n              id={index}\n              item={item}\n              onCheck={removeItemMon}\n              />\n              ))}\n            </List>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion className={classes.dayBlockTue}>\n        <AccordionSummary\n        ><p>Tuesday</p>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n          <div className=\"btns\">\n            <Button className={classes.stylesForButn}\n            onClick={addItemTues}>\n            Add\n            </Button>\n            <Button className={classes.DeleteButn}\n              onClick={deleteTasksTues}>\n              Delete\n              </Button>\n              </div>\n            <TextField id=\"standart-basic\" label='Add to do' value={inputTues}\n            onChange={(event) => {setInputTues(event.target.value)}}\n            ></TextField>\n            <List>\n              {itemsTues.map((item, index) => (\n              <TodoItem\n              key={index}\n              id={index}\n              item={item}\n              onCheck={removeItemTues}\n              />\n              ))}\n            </List>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion className={classes.dayBlockWed}>\n        <AccordionSummary>\n        <p>Wednesday</p>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n          <div className=\"btns\">\n            <Button className={classes.stylesForButn}\n            onClick={addItemWed}>\n            Add\n            </Button>\n            <Button className={classes.DeleteButn}\n              onClick={deleteTasksWed}>\n              Delete\n              </Button>\n              </div>\n            <TextField id=\"standart-basic\" label='Add to do' value={inputWed}\n            onChange={(event) => {setInputWed(event.target.value)}}\n            ></TextField>\n            <List>\n              {itemsWed.map((item, index) => (\n              <TodoItem\n              key={index}\n              id={index}\n              item={item}\n              onCheck={removeItemWed}\n              />\n              ))}\n            </List>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion className={classes.dayBlockThusd}>\n        <AccordionSummary>\n        <p>Thusday</p>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n          <div className=\"btns\">\n            <Button className={classes.stylesForButn}\n            onClick={addItemThusd}>\n            Add\n            </Button>\n            <Button className={classes.DeleteButn}\n              onClick={deleteTasksThusd}>\n              Delete\n              </Button>\n              </div>\n            <TextField id=\"standart-basic\" label='Add to do' value={inputThusd}\n            onChange={(event) => {setInputThusd(event.target.value)}}\n            ></TextField>\n            <List>\n              {itemsThusd.map((item, index) => (\n              <TodoItem\n              key={index}\n              id={index}\n              item={item}\n              onCheck={removeItemThusd}\n              />\n              ))}\n            </List>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion className={classes.dayBlockFri}>\n        <AccordionSummary>\n        <p>Friday</p>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n          <div className=\"btns\">\n            <Button className={classes.stylesForButn}\n            onClick={addItemFri}>\n            Add\n            </Button>\n            <Button className={classes.DeleteButn}\n              onClick={deleteTasksFri}>\n              Delete\n              </Button>\n              </div>\n            <TextField id=\"standart-basic\" label='Add to do' value={inputFri}\n            onChange={(event) => {setInputFri(event.target.value)}}\n            ></TextField>\n            <List>\n              {itemsFri.map((item, index) => (\n              <TodoItem\n              key={index}\n              id={index}\n              item={item}\n              onCheck={removeItemFri}\n              />\n              ))}\n            </List>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion className={classes.dayBlockSat}>\n        <AccordionSummary>\n        <p>Saturday</p>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n          <div className=\"btns\">\n            <Button className={classes.stylesForButn}\n            onClick={addItemSat}>\n            Add\n            </Button>\n            <Button className={classes.DeleteButn}\n              onClick={deleteTasksSat}>\n              Delete\n              </Button>\n              </div>\n            <TextField id=\"standart-basic\" label='Add to do' value={inputSat}\n            onChange={(event) => {setInputSat(event.target.value)}}\n            ></TextField>\n            <List>\n              {itemsSat.map((item, index) => (\n              <TodoItem\n              key={index}\n              id={index}\n              item={item}\n              onCheck={removeItemSat}\n              />\n              ))}\n            </List>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion className={classes.dayBlockSun}>\n        <AccordionSummary>\n        <p>Sunday</p>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n          <div className=\"btns\">\n            <Button className={classes.stylesForButn}\n            onClick={addItemSun}>\n            Add\n            </Button>\n            <Button className={classes.DeleteButn}\n              onClick={deleteTasksSun}>\n              Delete\n              </Button>\n              </div>\n            <TextField id=\"standart-basic\" label='Add to do' value={inputSun}\n            onChange={(event) => {setInputSun(event.target.value)}}\n            ></TextField>\n            <List>\n              {itemsSun.map((item, index) => (\n              <TodoItem\n              key={index}\n              id={index}\n              item={item}\n              onCheck={removeItemSun}\n              />\n              ))}\n            </List>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n    \n      <div></div>\n    </div>\n    </div>\n  );\n}","/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/user/get-task.js",[],"/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/admin/TodoItem.jsx",[],"/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/user/TodoItem.jsx",[],["49","50"],"/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/start_pages/start-page.js",["51","52"],"import React, { Component} from \"react\";\nimport { NavLink, Link, BrowserRouter } from 'react-router-dom';\nimport \"./start-page.css\";\nimport back from \"../images/new.svg\"\nimport TextField from '@material-ui/core/TextField';\n\nclass Main extends Component {\n\n    render() {\n    return (\n\n        <div className=\"wraper\">\n            <h1 className=\"chnTsk\" >Children task</h1>\n            <div className=\"main\">\n                <div className=\"status\">\n                    <div className=\"create-square\">\n                        <NavLink className=\"texta\" to=\"/create-task\">\n                            <p className=\"texta create\">Create</p>\n                        </NavLink>\n                    </div>\n                    <div className=\"get-square\">\n                        <NavLink className=\"texta\" to=\"/get-task\">\n                            <p className=\"texta get\">Get task</p>\n                        </NavLink>\n                    </div>\n                </div>\n                <div className=\"input-block\">\n                    <TextField\n                    id=\"standart-basic\"\n                    label='Login:'\n                    // onChange={(event) => {setInputMon(event.target.value)}}\n                    ></TextField>\n                    <TextField\n                    id=\"standart-basic\"\n                    label='Password'\n                    // onChange={(event) => {setInputMon(event.target.value)}}\n                    ></TextField>\n                </div>\n                <div className='img'>\n                    <img src={back} alt=\"back\" ></img>\n                </div>\n            </div>\n        </div>\n    );\n    }\n}\nexport default Main;\n","/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/start_pages/header-admin.js",[],"/Users/BlackDevil/Desktop/Макс IT/BootCamp/Final project/children-task-accordion/client/src/components/start_pages/header-user.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":23},{"ruleId":"57","severity":1,"message":"61","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"62","line":115,"column":10,"nodeType":"59","messageId":"60","endLine":115,"endColumn":17},{"ruleId":"57","severity":1,"message":"63","line":115,"column":19,"nodeType":"59","messageId":"60","endLine":115,"endColumn":30},{"ruleId":"53","replacedBy":"64"},{"ruleId":"55","replacedBy":"65"},{"ruleId":"57","severity":1,"message":"66","line":2,"column":19,"nodeType":"59","messageId":"60","endLine":2,"endColumn":23},{"ruleId":"57","severity":1,"message":"58","line":2,"column":25,"nodeType":"59","messageId":"60","endLine":2,"endColumn":38},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'taskLst' is assigned a value but never used.","'setTaskList' is assigned a value but never used.",["67"],["68"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]